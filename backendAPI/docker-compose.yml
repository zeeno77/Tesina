version: '2'
services:
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ./data/mongo:/data/db
      - ./data/mongo-init:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    networks:
      - app-network
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
    networks:
      - app-network
  fastapi:
    build:
      context: ./
      dockerfile: fastapi.dockerfile
    volumes:
      - './fastapi:/app'
    ports:
      - 8000:8000
    environment:
      MONGODB_HOST: mongo
      MONGODB_PORT: 27017
      MONGODB_USER: ${MONGO_USER}
      MONGODB_PASSWORD: ${MONGO_PASSWORD}
      MONGODB_DBNAME: ${MONGO_DBNAME}
      PYTHONPATH: /app
    networks:
      - app-network
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=yesoreyeram-infinity-datasource
      - GF_SERVER_ROOT_URL=http://grafana:3000
    networks:
      - app-network
networks:
  app-network:
    driver: bridge

