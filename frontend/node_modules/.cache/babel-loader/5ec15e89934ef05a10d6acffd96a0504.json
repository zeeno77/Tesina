{"ast":null,"code":"var _jsxFileName = \"/home/juan/Programas/Tesina/repo/frontend/src/index.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { RadialGauge } from 'react-canvas-gauges';\nimport './style.css';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'React'\n    };\n  }\n  componentDidMount() {\n    let currentTemp = 0,\n      json = \"\",\n      auxTemp = -999;\n    this.interval = setInterval(() => {\n      fetch(\"http://localhost:8000/muestra/sensor/Temperatura\").then(response => response.json().then(data => ({\n        data: data,\n        status: response.status\n      })).then(res => {\n        auxTemp = parseFloat(res.data.valor);\n        if (auxTemp != -999) {\n          currentTemp = auxTemp;\n        }\n        json = res.data;\n        console.log(res.status, res.data);\n      }));\n      console.log(\"valor: \");\n      console.log(currentTemp);\n      console.log(\"json: \");\n      console.log(json);\n      this.setState({\n        temperature: currentTemp\n      });\n    }, 200);\n  }\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RadialGauge, {\n      units: \"\\xB0C\",\n      title: \"Temperature\",\n      value: this.state.temperature,\n      minValue: 0,\n      maxValue: 45,\n      majorTicks: ['0', '5', '15', '20', '25', '30', '35', '40', '45'],\n      minorTicks: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 8\n  }\n}), document.getElementById('root'));","map":{"version":3,"names":["React","Component","render","RadialGauge","App","constructor","state","name","componentDidMount","currentTemp","json","auxTemp","interval","setInterval","fetch","then","response","data","status","res","parseFloat","valor","console","log","setState","temperature","componentWillUnmount","clearInterval","document","getElementById"],"sources":["/home/juan/Programas/Tesina/repo/frontend/src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport {RadialGauge} from 'react-canvas-gauges';\nimport './style.css';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'React'\n    };\n  }\n\n  componentDidMount() {\n    \n    let currentTemp = 0, json= \"\", auxTemp= -999;\n\n    this.interval = setInterval(()=>{\n        \n        fetch(\"http://localhost:8000/muestra/sensor/Temperatura\").then(response => \n          response.json().then(data => ({\n              data: data,\n              status: response.status\n          })\n      ).then(res => {\n          auxTemp = parseFloat(res.data.valor)\n          if(auxTemp != -999){\n            currentTemp = auxTemp\n          }\n          json = res.data\n          console.log(res.status, res.data)\n      }));\n\n\n        \n        console.log(\"valor: \" )\n        console.log(currentTemp)\n        console.log(\"json: \" )\n        console.log(json)\n\n        this.setState({\n          temperature : currentTemp\n        })\n\n    }, 200);\n    \n  \n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval)\n    }\n  }\n  \n  render() {\n    return (\n      <div>\n        <RadialGauge\n   units='Â°C'\n   title='Temperature'\n   value={this.state.temperature}\n   minValue={0}\n   maxValue={45}\n   majorTicks={['0', '5', '15', '20', '25', '30', '35', '40', '45']}\n   minorTicks={1}\n></RadialGauge>\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,QAAQ,WAAW;AAClC,SAAQC,WAAW,QAAO,qBAAqB;AAC/C,OAAO,aAAa;AAGpB,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1BI,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,IAAI,EAAE;IACR,CAAC;EACH;EAEAC,iBAAiB,GAAG;IAElB,IAAIC,WAAW,GAAG,CAAC;MAAEC,IAAI,GAAE,EAAE;MAAEC,OAAO,GAAE,CAAC,GAAG;IAE5C,IAAI,CAACC,QAAQ,GAAGC,WAAW,CAAC,MAAI;MAE5BC,KAAK,CAAC,kDAAkD,CAAC,CAACC,IAAI,CAACC,QAAQ,IACrEA,QAAQ,CAACN,IAAI,EAAE,CAACK,IAAI,CAACE,IAAI,KAAK;QAC1BA,IAAI,EAAEA,IAAI;QACVC,MAAM,EAAEF,QAAQ,CAACE;MACrB,CAAC,CAAC,CACL,CAACH,IAAI,CAACI,GAAG,IAAI;QACVR,OAAO,GAAGS,UAAU,CAACD,GAAG,CAACF,IAAI,CAACI,KAAK,CAAC;QACpC,IAAGV,OAAO,IAAI,CAAC,GAAG,EAAC;UACjBF,WAAW,GAAGE,OAAO;QACvB;QACAD,IAAI,GAAGS,GAAG,CAACF,IAAI;QACfK,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACD,MAAM,EAAEC,GAAG,CAACF,IAAI,CAAC;MACrC,CAAC,CAAC,CAAC;MAIDK,OAAO,CAACC,GAAG,CAAC,SAAS,CAAE;MACvBD,OAAO,CAACC,GAAG,CAACd,WAAW,CAAC;MACxBa,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAE;MACtBD,OAAO,CAACC,GAAG,CAACb,IAAI,CAAC;MAEjB,IAAI,CAACc,QAAQ,CAAC;QACZC,WAAW,EAAGhB;MAChB,CAAC,CAAC;IAEN,CAAC,EAAE,GAAG,CAAC;EAGT;EAEAiB,oBAAoB,GAAG;IACrB,IAAI,IAAI,CAACd,QAAQ,EAAE;MACjBe,aAAa,CAAC,IAAI,CAACf,QAAQ,CAAC;IAC9B;EACF;EAEAV,MAAM,GAAG;IACP,oBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,WAAW;MACjB,KAAK,EAAC,OAAI;MACV,KAAK,EAAC,aAAa;MACnB,KAAK,EAAE,IAAI,CAACI,KAAK,CAACmB,WAAY;MAC9B,QAAQ,EAAE,CAAE;MACZ,QAAQ,EAAE,EAAG;MACb,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;MACjE,UAAU,EAAE,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACF,CACH;EAEV;AACF;AAEAvB,MAAM,eAAC,oBAAC,GAAG;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EAAG,EAAE0B,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"module"}