{"ast":null,"code":"var _jsxFileName = \"/home/juan/Programas/Tesina/repo/frontend/src/index.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { RadialGauge } from 'react-canvas-gauges';\nimport './style.css';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'React'\n    };\n  }\n  componentDidMount() {\n    const newLimit = () => {\n      return Math.random() * 50;\n    };\n    let limit = newLimit();\n    let currentTemp = 0,\n      directionUp = true;\n    this.interval = setInterval(() => {\n      currentTemp = directionUp ? currentTemp + 1 : currentTemp - 1;\n      if (currentTemp >= limit && directionUp || currentTemp <= limit && !directionUp) {\n        let nextLimit = newLimit();\n        if (nextLimit < currentTemp) {\n          directionUp = false;\n        } else {\n          directionUp = true;\n        }\n      }\n      this.setState({\n        //temperature: currentTemp\n        temperature: fetch(\"/api/v1/multi-line-chart\").then(response => response.json())\n      });\n    }, 200);\n  }\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RadialGauge, {\n      units: \"\\xB0C\",\n      title: \"Temperature\",\n      value: this.state.temperature,\n      minValue: 0,\n      maxValue: 50,\n      majorTicks: ['0', '5', '15', '20', '25', '30', '35', '40', '45', '50'],\n      minorTicks: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 8\n  }\n}), document.getElementById('root'));","map":{"version":3,"names":["React","Component","render","RadialGauge","App","constructor","state","name","componentDidMount","newLimit","Math","random","limit","currentTemp","directionUp","interval","setInterval","nextLimit","setState","temperature","fetch","then","response","json","componentWillUnmount","clearInterval","document","getElementById"],"sources":["/home/juan/Programas/Tesina/repo/frontend/src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport {RadialGauge} from 'react-canvas-gauges';\nimport './style.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'React'\n    };\n  }\n\n  componentDidMount() {\n    const newLimit = () => {\n      return Math.random() * 50\n    }\n    let limit = newLimit();\n    let currentTemp = 0, directionUp = true;\n\n    this.interval = setInterval(()=> {\n        currentTemp = directionUp ? (currentTemp + 1): (currentTemp - 1);\n\n        if (((currentTemp >= limit) && directionUp) || \n        ((currentTemp <= limit) && !directionUp)) {\n          let nextLimit = newLimit();\n          if (nextLimit < currentTemp) {\n            directionUp = false;\n          }\n          else {\n            directionUp = true;\n          }\n        }\n\n        this.setState({\n          //temperature: currentTemp\n          temperature:\n            fetch(\"/api/v1/multi-line-chart\")\n                .then((response) => response.json())\n        })\n    }, 200);\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <RadialGauge\n   units='Â°C'\n   title='Temperature'\n   value={this.state.temperature}\n   minValue={0}\n   maxValue={50}\n   majorTicks={['0', '5', '15', '20', '25', '30', '35', '40', '45', '50']}\n   minorTicks={2}\n></RadialGauge>\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,QAAQ,WAAW;AAClC,SAAQC,WAAW,QAAO,qBAAqB;AAC/C,OAAO,aAAa;AAEpB,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1BI,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,IAAI,EAAE;IACR,CAAC;EACH;EAEAC,iBAAiB,GAAG;IAClB,MAAMC,QAAQ,GAAG,MAAM;MACrB,OAAOC,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE;IAC3B,CAAC;IACD,IAAIC,KAAK,GAAGH,QAAQ,EAAE;IACtB,IAAII,WAAW,GAAG,CAAC;MAAEC,WAAW,GAAG,IAAI;IAEvC,IAAI,CAACC,QAAQ,GAAGC,WAAW,CAAC,MAAK;MAC7BH,WAAW,GAAGC,WAAW,GAAID,WAAW,GAAG,CAAC,GAAIA,WAAW,GAAG,CAAE;MAEhE,IAAMA,WAAW,IAAID,KAAK,IAAKE,WAAW,IACxCD,WAAW,IAAID,KAAK,IAAK,CAACE,WAAY,EAAE;QACxC,IAAIG,SAAS,GAAGR,QAAQ,EAAE;QAC1B,IAAIQ,SAAS,GAAGJ,WAAW,EAAE;UAC3BC,WAAW,GAAG,KAAK;QACrB,CAAC,MACI;UACHA,WAAW,GAAG,IAAI;QACpB;MACF;MAEA,IAAI,CAACI,QAAQ,CAAC;QACZ;QACAC,WAAW,EACTC,KAAK,CAAC,0BAA0B,CAAC,CAC5BC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE;MAC3C,CAAC,CAAC;IACN,CAAC,EAAE,GAAG,CAAC;EACT;EAEAC,oBAAoB,GAAG;IACrB,IAAI,IAAI,CAACT,QAAQ,EAAE;MACjBU,aAAa,CAAC,IAAI,CAACV,QAAQ,CAAC;IAC9B;EACF;EAEAb,MAAM,GAAG;IACP,oBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,WAAW;MACjB,KAAK,EAAC,OAAI;MACV,KAAK,EAAC,aAAa;MACnB,KAAK,EAAE,IAAI,CAACI,KAAK,CAACa,WAAY;MAC9B,QAAQ,EAAE,CAAE;MACZ,QAAQ,EAAE,EAAG;MACb,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;MACvE,UAAU,EAAE,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACF,CACH;EAEV;AACF;AAEAjB,MAAM,eAAC,oBAAC,GAAG;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EAAG,EAAEwB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"module"}