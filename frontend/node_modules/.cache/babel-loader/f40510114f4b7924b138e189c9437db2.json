{"ast":null,"code":"'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n  registerDefault: function registerDefault() {}\n};\nmodule.exports = EventListener;","map":{"version":3,"names":["emptyFunction","require","EventListener","listen","target","eventType","callback","addEventListener","remove","removeEventListener","attachEvent","detachEvent","capture","process","env","NODE_ENV","console","error","registerDefault","module","exports"],"sources":["/home/juan/Programas/Tesina/repo/frontend/node_modules/fbjs/lib/EventListener.js"],"sourcesContent":["'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;;AAE9C;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAG;EAClB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,MAAM,EAAE,SAASA,MAAM,CAACC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAE;IACnD,IAAIF,MAAM,CAACG,gBAAgB,EAAE;MAC3BH,MAAM,CAACG,gBAAgB,CAACF,SAAS,EAAEC,QAAQ,EAAE,KAAK,CAAC;MACnD,OAAO;QACLE,MAAM,EAAE,SAASA,MAAM,GAAG;UACxBJ,MAAM,CAACK,mBAAmB,CAACJ,SAAS,EAAEC,QAAQ,EAAE,KAAK,CAAC;QACxD;MACF,CAAC;IACH,CAAC,MAAM,IAAIF,MAAM,CAACM,WAAW,EAAE;MAC7BN,MAAM,CAACM,WAAW,CAAC,IAAI,GAAGL,SAAS,EAAEC,QAAQ,CAAC;MAC9C,OAAO;QACLE,MAAM,EAAE,SAASA,MAAM,GAAG;UACxBJ,MAAM,CAACO,WAAW,CAAC,IAAI,GAAGN,SAAS,EAAEC,QAAQ,CAAC;QAChD;MACF,CAAC;IACH;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEM,OAAO,EAAE,SAASA,OAAO,CAACR,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAE;IACrD,IAAIF,MAAM,CAACG,gBAAgB,EAAE;MAC3BH,MAAM,CAACG,gBAAgB,CAACF,SAAS,EAAEC,QAAQ,EAAE,IAAI,CAAC;MAClD,OAAO;QACLE,MAAM,EAAE,SAASA,MAAM,GAAG;UACxBJ,MAAM,CAACK,mBAAmB,CAACJ,SAAS,EAAEC,QAAQ,EAAE,IAAI,CAAC;QACvD;MACF,CAAC;IACH,CAAC,MAAM;MACL,IAAIO,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QACzCC,OAAO,CAACC,KAAK,CAAC,8DAA8D,GAAG,oEAAoE,GAAG,+BAA+B,CAAC;MACxL;MACA,OAAO;QACLT,MAAM,EAAER;MACV,CAAC;IACH;EACF,CAAC;EAEDkB,eAAe,EAAE,SAASA,eAAe,GAAG,CAAC;AAC/C,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGlB,aAAa"},"metadata":{},"sourceType":"script"}